# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:11-jdk
      - image: circleci/node:12.13-stretch

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~

    environment:
    # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          name: Restore cache backend
          keys:
            - v1-dependencies-{{ checksum "Backend/pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      
      - restore_cache:
          name: Restore cache frontend
          keys:
            - v4-dependencies-{{ checksum "Frontend/package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v4-dependencies-


      - run: ls && cd Backend/ && mvn dependency:go-offline
      - run: cd ~/Frontend/ && npm ci
      
      - save_cache:
          name: Saved backend cache
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "Backend/pom.xml" }}
      
      - save_cache:
          name: Saved frontend cache
          paths:
            - ~/Frontend/node_modules
          key: v1-dependencies-{{ checksum "Frontend/package.json" }}


      # run tests!
      - run: 
          name: linter test
          command: cd Backend/ && mvn checkstyle:check

      - run: 
          name: unit tests
          command: cd Backend/ && mvn test
      
      - run: cd Frontend/ && npm ci

      - run:
          name: frontend linter
          command: npm run eslint
      
      - run:
          name: frontend tests
          command: npm run test